{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1GV0WiorzoB2R3rVFOnwEM2ktRjiq5k-C","timestamp":1738649195937}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"UfiHQBxy7v3h","executionInfo":{"status":"ok","timestamp":1739728381591,"user_tz":-330,"elapsed":22242,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"26a97558-2414-4c8d-dc8f-912b7deea9a1"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting scikit-plot\n","  Downloading scikit_plot-0.3.7-py3-none-any.whl.metadata (7.1 kB)\n","Requirement already satisfied: matplotlib>=1.4.0 in /usr/local/lib/python3.11/dist-packages (from scikit-plot) (3.10.0)\n","Requirement already satisfied: scikit-learn>=0.18 in /usr/local/lib/python3.11/dist-packages (from scikit-plot) (1.6.1)\n","Requirement already satisfied: scipy>=0.9 in /usr/local/lib/python3.11/dist-packages (from scikit-plot) (1.13.1)\n","Requirement already satisfied: joblib>=0.10 in /usr/local/lib/python3.11/dist-packages (from scikit-plot) (1.4.2)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=1.4.0->scikit-plot) (1.3.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=1.4.0->scikit-plot) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=1.4.0->scikit-plot) (4.56.0)\n","Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=1.4.0->scikit-plot) (1.4.8)\n","Requirement already satisfied: numpy>=1.23 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=1.4.0->scikit-plot) (1.26.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=1.4.0->scikit-plot) (24.2)\n","Requirement already satisfied: pillow>=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=1.4.0->scikit-plot) (11.1.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=1.4.0->scikit-plot) (3.2.1)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=1.4.0->scikit-plot) (2.8.2)\n","Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn>=0.18->scikit-plot) (3.5.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.7->matplotlib>=1.4.0->scikit-plot) (1.17.0)\n","Downloading scikit_plot-0.3.7-py3-none-any.whl (33 kB)\n","Installing collected packages: scikit-plot\n","Successfully installed scikit-plot-0.3.7\n"]}],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.model_selection import train_test_split\n","from sklearn import metrics\n","from sklearn.metrics import roc_auc_score,roc_curve,auc\n","from sklearn.ensemble import RandomForestClassifier,RandomForestRegressor\n","!pip install scikit-plot --upgrade\n","from scipy import interpolate\n","# import scikitplot as skplt"]},{"cell_type":"code","source":["train_data_classification = pd.read_csv(\"Train_eP48B9k.csv\")\n","test_data_classification = pd.read_csv(\"Test_jPKyvmK.csv\")"],"metadata":{"id":"TJqJTa4v9Cy6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_data_classification.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vlw81aovph2c","executionInfo":{"status":"ok","timestamp":1739728393967,"user_tz":-330,"elapsed":7,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"911c95eb-f088-476c-ea99-84bb9d67b7a4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(31647, 18)"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["test_data_classification.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SO54mBQFpvuq","executionInfo":{"status":"ok","timestamp":1739728398371,"user_tz":-330,"elapsed":415,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"7fe7f056-acff-45e4-e0c4-1e141fe3b751"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(13564, 17)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["le = LabelEncoder()\n","for col in train_data_classification:\n","    if train_data_classification[col].dtype == \"object\":\n","        train_data_classification[col] = le.fit_transform(train_data_classification[col])\n","        test_data_classification[col] = le.fit_transform(test_data_classification[col])"],"metadata":{"id":"INZ-HyQ09M3i"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["le"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"dVJqU1Pm9P02","executionInfo":{"status":"ok","timestamp":1739728409630,"user_tz":-330,"elapsed":410,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"7c1df110-26a3-4f2c-e43f-1f9c00f25bd5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LabelEncoder()"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: #000;\n","  --sklearn-color-text-muted: #666;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: flex;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","  align-items: start;\n","  justify-content: space-between;\n","  gap: 0.5em;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label .caption {\n","  font-size: 0.6rem;\n","  font-weight: lighter;\n","  color: var(--sklearn-color-text-muted);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 0.5em;\n","  text-align: center;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LabelEncoder()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>LabelEncoder</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.preprocessing.LabelEncoder.html\">?<span>Documentation for LabelEncoder</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>LabelEncoder()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["#Dropping Columns with NA's\n","\n","train_data_classification.drop(['id','customer_age','balance','last_contact_duration','num_contacts_in_campaign','days_since_prev_campaign_contact'],axis=1,inplace=True)\n","test_data_classification.drop(['id','customer_age','balance','last_contact_duration','num_contacts_in_campaign','days_since_prev_campaign_contact'],axis=1,inplace=True)\n"],"metadata":{"id":"tPTL1LJY9mVo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_data_classification.shape\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p4w16dpfp3F_","executionInfo":{"status":"ok","timestamp":1739728416310,"user_tz":-330,"elapsed":330,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"3032bca0-7041-4d84-b2f1-8a7096c7b2b4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(31647, 12)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["test_data_classification.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J20geRuvp-4I","executionInfo":{"status":"ok","timestamp":1739728419872,"user_tz":-330,"elapsed":414,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"bdfbfa5d-7319-4467-dadf-586ad6c6b061"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(13564, 11)"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["#Splitting Data\n","\n","y = train_data_classification['term_deposit_subscribed']\n","X = train_data_classification.drop('term_deposit_subscribed',axis=1)\n","\n","X_Train,X_Test,y_Train,y_Test = train_test_split(X,y,test_size=0.25,stratify=y,random_state=42)\n","print (X_Train.shape)\n","print (y_Train.shape)\n","print (X_Test.shape)\n","print (y_Test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y0me5vKF92G5","executionInfo":{"status":"ok","timestamp":1739728422550,"user_tz":-330,"elapsed":6,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"ac28919f-f63a-45cc-c431-7d9f0a011e75"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(23735, 11)\n","(23735,)\n","(7912, 11)\n","(7912,)\n"]}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"v19UpmUkOZJJ","executionInfo":{"status":"ok","timestamp":1739728424434,"user_tz":-330,"elapsed":4,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"57179b3c-ec64-48e3-a5e7-2e9276ed8f36"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        0\n","1        0\n","2        0\n","3        0\n","4        0\n","        ..\n","31642    0\n","31643    0\n","31644    0\n","31645    0\n","31646    0\n","Name: term_deposit_subscribed, Length: 31647, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>term_deposit_subscribed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>31642</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>31643</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>31644</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>31645</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>31646</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>31647 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"76cxKh8TOgmz","executionInfo":{"status":"ok","timestamp":1739728428186,"user_tz":-330,"elapsed":383,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"dd455e74-5e3b-4df6-fe01-2adf5d411b90"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       job_type  marital  education  default  housing_loan  personal_loan  \\\n","0             4        2          2        0             1              0   \n","1             1        1          1        0             0              1   \n","2             9        1          1        0             0              0   \n","3             7        2          1        0             1              0   \n","4             1        1          0        0             1              0   \n","...         ...      ...        ...      ...           ...            ...   \n","31642         0        1          1        0             1              0   \n","31643         4        1          2        0             0              0   \n","31644        10        1          0        0             1              0   \n","31645         7        1          1        0             0              0   \n","31646         9        2          2        0             0              0   \n","\n","       communication_type  day_of_month  month  num_contacts_prev_campaign  \\\n","0                       2            26      6                           0   \n","1                       0            18      9                           1   \n","2                       0             5      3                           0   \n","3                       2            20      8                           0   \n","4                       0            13      8                           0   \n","...                   ...           ...    ...                         ...   \n","31642                   0             2      3                           3   \n","31643                   2            20      6                           0   \n","31644                   2            23      8                           0   \n","31645                   0            11      1                           0   \n","31646                   0            18      1                           0   \n","\n","       prev_campaign_outcome  \n","0                          3  \n","1                          1  \n","2                          3  \n","3                          3  \n","4                          3  \n","...                      ...  \n","31642                      1  \n","31643                      3  \n","31644                      3  \n","31645                      3  \n","31646                      3  \n","\n","[31647 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-fa5c2f8c-4e3e-43d5-9663-49844681f65c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>job_type</th>\n","      <th>marital</th>\n","      <th>education</th>\n","      <th>default</th>\n","      <th>housing_loan</th>\n","      <th>personal_loan</th>\n","      <th>communication_type</th>\n","      <th>day_of_month</th>\n","      <th>month</th>\n","      <th>num_contacts_prev_campaign</th>\n","      <th>prev_campaign_outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>26</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>18</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>31642</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>31643</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>31644</th>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>23</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>31645</th>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>31646</th>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>18</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>31647 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa5c2f8c-4e3e-43d5-9663-49844681f65c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fa5c2f8c-4e3e-43d5-9663-49844681f65c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fa5c2f8c-4e3e-43d5-9663-49844681f65c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ab55cc0e-3b7d-4829-8514-d3e54d499cd4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ab55cc0e-3b7d-4829-8514-d3e54d499cd4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ab55cc0e-3b7d-4829-8514-d3e54d499cd4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_de38f2d4-c7bf-4e12-89e2-968429d47a53\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_de38f2d4-c7bf-4e12-89e2-968429d47a53 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X","summary":"{\n  \"name\": \"X\",\n  \"rows\": 31647,\n  \"fields\": [\n    {\n      \"column\": \"job_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 11,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          11,\n          6,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"default\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"housing_loan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"personal_loan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"communication_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day_of_month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1,\n        \"max\": 31,\n        \"num_unique_values\": 31,\n        \"samples\": [\n          25,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 11,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          7,\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"num_contacts_prev_campaign\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 275,\n        \"num_unique_values\": 41,\n        \"samples\": [\n          25,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"prev_campaign_outcome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["rf = RandomForestClassifier()\n","rf.fit(X_Train,y_Train)\n","predict = rf.predict(X_Test)"],"metadata":{"id":"PPHx8TY099Uo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["confusion_mat = metrics.confusion_matrix(y_Test,predict)\n","disp = metrics.ConfusionMatrixDisplay(confusion_matrix=confusion_mat,display_labels=rf.classes_)\n","disp.plot()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"Yr0X7nT--EPB","executionInfo":{"status":"ok","timestamp":1739728433692,"user_tz":-330,"elapsed":4,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"77dffa3c-bd96-413d-9274-21bfd29e7ae4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7d774e654950>"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# calculating the values of confusion matrix\n","tn, fp, fn, tp = metrics.confusion_matrix(y_Test, predict).ravel()\n","\n","# accuracy score using sklearn function\n","accuracy_using_sklearn = metrics.accuracy_score(y_Test,predict)\n","print (accuracy_using_sklearn)\n","\n","# accuracy score using the formula\n","accuracy_score_using_formula = (tp+tn)/(tp+tn+fp+fn)\n","print (accuracy_score_using_formula)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qXJ65nXV-SHU","executionInfo":{"status":"ok","timestamp":1739728436457,"user_tz":-330,"elapsed":407,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"6a5a6144-b89d-423d-82fe-a14bdcf0027e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.8909251769464105\n","0.8909251769464105\n"]}]},{"cell_type":"code","source":["# error rate using the formula\n","error_rate_using_formula = (fp+fn)/(tp+tn+fp+fn)\n","print (error_rate_using_formula)\n","# error rate using sklearn accuracy score\n","error_rate_using_sklearn = 1-metrics.accuracy_score(y_Test,predict)\n","print (error_rate_using_sklearn)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uOReJ-Wi-a5u","executionInfo":{"status":"ok","timestamp":1739728438567,"user_tz":-330,"elapsed":367,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"2080e1bf-8304-4033-82e0-3d141cb94a33"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.10907482305358948\n","0.10907482305358951\n"]}]},{"cell_type":"code","source":["# sensitivity using the formula\n","sensitivity_using_formula = (tp)/(tp+fn)\n","print (sensitivity_using_formula)\n","# sensitivity using sklearn function\n","sensitivity_using_sklearn = metrics.recall_score(y_Test,predict)\n","print (sensitivity_using_sklearn)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9iogvtXU-iPj","executionInfo":{"status":"ok","timestamp":1739728441164,"user_tz":-330,"elapsed":396,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"0bf5ee75-e068-4c94-cf35-3df7c7bb763c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.2626619552414605\n","0.2626619552414605\n"]}]},{"cell_type":"code","source":["# False Positive Rate using formula\n","FPR_using_formula = (fp) / (fp+tn)\n","print (FPR_using_formula)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z1y9HoYK-nBy","executionInfo":{"status":"ok","timestamp":1739728442633,"user_tz":-330,"elapsed":371,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"14e7c6ac-27c2-4577-d58c-125a5e923878"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.03355514653829817\n"]}]},{"cell_type":"code","source":["# specificity using formula\n","Specificity_using_formula = (tn) / (tn+fp)\n","print (Specificity_using_formula)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eIBYoG3F-rPx","executionInfo":{"status":"ok","timestamp":1739728445061,"user_tz":-330,"elapsed":411,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"e4efbc7e-b079-42d8-f898-09bcb03bf1bb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9664448534617018\n"]}]},{"cell_type":"code","source":["# Precision using formula\n","Precision_using_formula = (tp) / (tp+fp)\n","print (Precision_using_formula)\n","# precision using sklearn function\n","Precision_using_sklearn = metrics.precision_score(y_Test,predict)\n","print (Precision_using_sklearn)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ujYSOkTy-x8Z","executionInfo":{"status":"ok","timestamp":1739728446970,"user_tz":-330,"elapsed":376,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"9c943c0d-8a61-411c-cf9a-baaa0e432217"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.48478260869565215\n","0.48478260869565215\n"]}]},{"cell_type":"code","source":["# F Beta Score\n","F_Beta_Score = metrics.fbeta_score(y_Test,predict,beta=1)\n","print (F_Beta_Score)\n","\n","# F1 Score\n","F1_Score = metrics.f1_score(y_Test,predict)\n","print (F1_Score)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0mfsX0b0-8tm","executionInfo":{"status":"ok","timestamp":1739728450452,"user_tz":-330,"elapsed":361,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"8150de27-c002-4d71-fddd-5813b6d9e69e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.3407181054239878\n","0.3407181054239878\n"]}]},{"cell_type":"code","source":["log_loss = metrics.log_loss(y_Test,rf.predict_proba(X_Test)[:,1])\n","print (log_loss)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8j0aeuur_Eh-","executionInfo":{"status":"ok","timestamp":1739728452862,"user_tz":-330,"elapsed":343,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"b288f860-6fa5-40f3-e7f4-6a6537e48181"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.7525495676161571\n"]}]},{"cell_type":"code","source":["frp,trp, threshold = roc_curve(y_Test,rf.predict_proba(X_Test)[:,1])\n","roc_auc_ = auc(frp,trp)\n","plt.title('Reciever Operating Characteristics Curve')\n","plt.plot(frp,trp,'r',label = 'AUC = %0.3f' % roc_auc_)\n","plt.legend(loc='lower right')\n","plt.plot([0,1],[0,1],'b--')\n","plt.ylabel('True positive rate')\n","plt.xlabel('False positive rate')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"01NYv_TE_J9B","executionInfo":{"status":"ok","timestamp":1739728456553,"user_tz":-330,"elapsed":1041,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"05139b1e-997c-4005-c52e-b99cf2826229"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'False positive rate')"]},"metadata":{},"execution_count":23},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# area under roc curve\n","area_under_roc_curve = metrics.auc(frp,trp)\n","print (area_under_roc_curve)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c1dSfRrF_QmQ","executionInfo":{"status":"ok","timestamp":1739728460632,"user_tz":-330,"elapsed":417,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"3ac33030-8143-40e2-ef62-9aea31eb25ad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.756973541341789\n"]}]},{"cell_type":"code","source":["train_data_regression = pd.read_csv(\"train_v9rqX0R.csv\")\n","test_data_regression = pd.read_csv(\"test_AbJTz2l.csv\")"],"metadata":{"id":"1eqOl2mYl4pH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_data_regression\n","test_data_regression"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"dPvmYFAHme8f","executionInfo":{"status":"ok","timestamp":1739728467386,"user_tz":-330,"elapsed":376,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"d602f362-788d-4c6b-d4cc-68de3651bcc2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Item_Identifier  Item_Weight Item_Fat_Content  Item_Visibility  \\\n","0              FDW58       20.750          Low Fat         0.007565   \n","1              FDW14        8.300              reg         0.038428   \n","2              NCN55       14.600          Low Fat         0.099575   \n","3              FDQ58        7.315          Low Fat         0.015388   \n","4              FDY38          NaN          Regular         0.118599   \n","...              ...          ...              ...              ...   \n","5676           FDB58       10.500          Regular         0.013496   \n","5677           FDD47        7.600          Regular         0.142991   \n","5678           NCO17       10.000          Low Fat         0.073529   \n","5679           FDJ26       15.300          Regular         0.000000   \n","5680           FDU37        9.500          Regular         0.104720   \n","\n","               Item_Type  Item_MRP Outlet_Identifier  \\\n","0            Snack Foods  107.8622            OUT049   \n","1                  Dairy   87.3198            OUT017   \n","2                 Others  241.7538            OUT010   \n","3            Snack Foods  155.0340            OUT017   \n","4                  Dairy  234.2300            OUT027   \n","...                  ...       ...               ...   \n","5676         Snack Foods  141.3154            OUT046   \n","5677       Starchy Foods  169.1448            OUT018   \n","5678  Health and Hygiene  118.7440            OUT045   \n","5679              Canned  214.6218            OUT017   \n","5680              Canned   79.7960            OUT045   \n","\n","      Outlet_Establishment_Year Outlet_Size Outlet_Location_Type  \\\n","0                          1999      Medium               Tier 1   \n","1                          2007         NaN               Tier 2   \n","2                          1998         NaN               Tier 3   \n","3                          2007         NaN               Tier 2   \n","4                          1985      Medium               Tier 3   \n","...                         ...         ...                  ...   \n","5676                       1997       Small               Tier 1   \n","5677                       2009      Medium               Tier 3   \n","5678                       2002         NaN               Tier 2   \n","5679                       2007         NaN               Tier 2   \n","5680                       2002         NaN               Tier 2   \n","\n","            Outlet_Type  \n","0     Supermarket Type1  \n","1     Supermarket Type1  \n","2         Grocery Store  \n","3     Supermarket Type1  \n","4     Supermarket Type3  \n","...                 ...  \n","5676  Supermarket Type1  \n","5677  Supermarket Type2  \n","5678  Supermarket Type1  \n","5679  Supermarket Type1  \n","5680  Supermarket Type1  \n","\n","[5681 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-16e61983-eeef-413d-b4f1-45ce20c904ca\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Item_Identifier</th>\n","      <th>Item_Weight</th>\n","      <th>Item_Fat_Content</th>\n","      <th>Item_Visibility</th>\n","      <th>Item_Type</th>\n","      <th>Item_MRP</th>\n","      <th>Outlet_Identifier</th>\n","      <th>Outlet_Establishment_Year</th>\n","      <th>Outlet_Size</th>\n","      <th>Outlet_Location_Type</th>\n","      <th>Outlet_Type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>FDW58</td>\n","      <td>20.750</td>\n","      <td>Low Fat</td>\n","      <td>0.007565</td>\n","      <td>Snack Foods</td>\n","      <td>107.8622</td>\n","      <td>OUT049</td>\n","      <td>1999</td>\n","      <td>Medium</td>\n","      <td>Tier 1</td>\n","      <td>Supermarket Type1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>FDW14</td>\n","      <td>8.300</td>\n","      <td>reg</td>\n","      <td>0.038428</td>\n","      <td>Dairy</td>\n","      <td>87.3198</td>\n","      <td>OUT017</td>\n","      <td>2007</td>\n","      <td>NaN</td>\n","      <td>Tier 2</td>\n","      <td>Supermarket Type1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NCN55</td>\n","      <td>14.600</td>\n","      <td>Low Fat</td>\n","      <td>0.099575</td>\n","      <td>Others</td>\n","      <td>241.7538</td>\n","      <td>OUT010</td>\n","      <td>1998</td>\n","      <td>NaN</td>\n","      <td>Tier 3</td>\n","      <td>Grocery Store</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>FDQ58</td>\n","      <td>7.315</td>\n","      <td>Low Fat</td>\n","      <td>0.015388</td>\n","      <td>Snack Foods</td>\n","      <td>155.0340</td>\n","      <td>OUT017</td>\n","      <td>2007</td>\n","      <td>NaN</td>\n","      <td>Tier 2</td>\n","      <td>Supermarket Type1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>FDY38</td>\n","      <td>NaN</td>\n","      <td>Regular</td>\n","      <td>0.118599</td>\n","      <td>Dairy</td>\n","      <td>234.2300</td>\n","      <td>OUT027</td>\n","      <td>1985</td>\n","      <td>Medium</td>\n","      <td>Tier 3</td>\n","      <td>Supermarket Type3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5676</th>\n","      <td>FDB58</td>\n","      <td>10.500</td>\n","      <td>Regular</td>\n","      <td>0.013496</td>\n","      <td>Snack Foods</td>\n","      <td>141.3154</td>\n","      <td>OUT046</td>\n","      <td>1997</td>\n","      <td>Small</td>\n","      <td>Tier 1</td>\n","      <td>Supermarket Type1</td>\n","    </tr>\n","    <tr>\n","      <th>5677</th>\n","      <td>FDD47</td>\n","      <td>7.600</td>\n","      <td>Regular</td>\n","      <td>0.142991</td>\n","      <td>Starchy Foods</td>\n","      <td>169.1448</td>\n","      <td>OUT018</td>\n","      <td>2009</td>\n","      <td>Medium</td>\n","      <td>Tier 3</td>\n","      <td>Supermarket Type2</td>\n","    </tr>\n","    <tr>\n","      <th>5678</th>\n","      <td>NCO17</td>\n","      <td>10.000</td>\n","      <td>Low Fat</td>\n","      <td>0.073529</td>\n","      <td>Health and Hygiene</td>\n","      <td>118.7440</td>\n","      <td>OUT045</td>\n","      <td>2002</td>\n","      <td>NaN</td>\n","      <td>Tier 2</td>\n","      <td>Supermarket Type1</td>\n","    </tr>\n","    <tr>\n","      <th>5679</th>\n","      <td>FDJ26</td>\n","      <td>15.300</td>\n","      <td>Regular</td>\n","      <td>0.000000</td>\n","      <td>Canned</td>\n","      <td>214.6218</td>\n","      <td>OUT017</td>\n","      <td>2007</td>\n","      <td>NaN</td>\n","      <td>Tier 2</td>\n","      <td>Supermarket Type1</td>\n","    </tr>\n","    <tr>\n","      <th>5680</th>\n","      <td>FDU37</td>\n","      <td>9.500</td>\n","      <td>Regular</td>\n","      <td>0.104720</td>\n","      <td>Canned</td>\n","      <td>79.7960</td>\n","      <td>OUT045</td>\n","      <td>2002</td>\n","      <td>NaN</td>\n","      <td>Tier 2</td>\n","      <td>Supermarket Type1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5681 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-16e61983-eeef-413d-b4f1-45ce20c904ca')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-16e61983-eeef-413d-b4f1-45ce20c904ca button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-16e61983-eeef-413d-b4f1-45ce20c904ca');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f3c4ce2b-41eb-4791-bc64-19781b882544\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f3c4ce2b-41eb-4791-bc64-19781b882544')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f3c4ce2b-41eb-4791-bc64-19781b882544 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e8adbad1-8402-4065-8bff-c6145a3c27a8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('test_data_regression')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e8adbad1-8402-4065-8bff-c6145a3c27a8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('test_data_regression');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test_data_regression","summary":"{\n  \"name\": \"test_data_regression\",\n  \"rows\": 5681,\n  \"fields\": [\n    {\n      \"column\": \"Item_Identifier\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1543,\n        \"samples\": [\n          \"FDC29\",\n          \"FDI32\",\n          \"FDU55\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Item_Weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.664848587385391,\n        \"min\": 4.555,\n        \"max\": 21.35,\n        \"num_unique_values\": 410,\n        \"samples\": [\n          8.1,\n          10.695,\n          18.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Item_Fat_Content\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"reg\",\n          \"low fat\",\n          \"Regular\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Item_Visibility\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.051252368331661656,\n        \"min\": 0.0,\n        \"max\": 0.323637245,\n        \"num_unique_values\": 5277,\n        \"samples\": [\n          0.123365446,\n          0.183275872,\n          0.165907543\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Item_Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Snack Foods\",\n          \"Dairy\",\n          \"Health and Hygiene\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Item_MRP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 61.809090595947225,\n        \"min\": 31.99,\n        \"max\": 266.5884,\n        \"num_unique_values\": 4402,\n        \"samples\": [\n          79.0328,\n          145.7418,\n          216.6192\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outlet_Identifier\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"OUT013\",\n          \"OUT017\",\n          \"OUT018\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outlet_Establishment_Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1985,\n        \"max\": 2009,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          1987,\n          2007,\n          2009\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outlet_Size\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Medium\",\n          \"Small\",\n          \"High\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outlet_Location_Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Tier 1\",\n          \"Tier 2\",\n          \"Tier 3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outlet_Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Grocery Store\",\n          \"Supermarket Type2\",\n          \"Supermarket Type1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["le = LabelEncoder()\n","for col in train_data_regression:\n","    if train_data_regression[col].dtype == \"object\":\n","        train_data_regression[col] = le.fit_transform(train_data_regression[col])\n","        test_data_regression[col] = le.fit_transform(test_data_regression[col])"],"metadata":{"id":"wuVpC4hzmYG6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_data_regression.drop(['Item_Weight','Item_Identifier'],axis=1,inplace=True)\n","test_data_regression.drop(['Item_Weight','Item_Identifier'],axis=1,inplace=True)"],"metadata":{"id":"T0JY2jKam2CC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y = train_data_regression['Item_Outlet_Sales']\n","X = train_data_regression.drop('Item_Outlet_Sales',axis=1)\n","\n","X_Trn,X_Tst,y_Trn,y_Tst = train_test_split(X,y,test_size=0.25,random_state=42)\n","print (X_Trn.shape)\n","print (y_Trn.shape)\n","print (X_Tst.shape)\n","print (y_Tst.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aJAqO_J6nDfa","executionInfo":{"status":"ok","timestamp":1739728475065,"user_tz":-330,"elapsed":347,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"94f39f6f-2e04-47a8-e25f-47e478b74b14"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(6392, 9)\n","(6392,)\n","(2131, 9)\n","(2131,)\n"]}]},{"cell_type":"code","source":["y_Trn"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"JKLAaFaoo-1i","executionInfo":{"status":"ok","timestamp":1739728479657,"user_tz":-330,"elapsed":397,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"100c9546-9181-430e-b8fa-c95424c420e6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4776     515.3292\n","7510    3056.0220\n","5828    1577.9460\n","5327    1331.6000\n","4810    1687.1372\n","          ...    \n","5734     280.9676\n","5191    1301.6390\n","5390    6145.3340\n","860     1649.8524\n","7270     965.4100\n","Name: Item_Outlet_Sales, Length: 6392, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Item_Outlet_Sales</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4776</th>\n","      <td>515.3292</td>\n","    </tr>\n","    <tr>\n","      <th>7510</th>\n","      <td>3056.0220</td>\n","    </tr>\n","    <tr>\n","      <th>5828</th>\n","      <td>1577.9460</td>\n","    </tr>\n","    <tr>\n","      <th>5327</th>\n","      <td>1331.6000</td>\n","    </tr>\n","    <tr>\n","      <th>4810</th>\n","      <td>1687.1372</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5734</th>\n","      <td>280.9676</td>\n","    </tr>\n","    <tr>\n","      <th>5191</th>\n","      <td>1301.6390</td>\n","    </tr>\n","    <tr>\n","      <th>5390</th>\n","      <td>6145.3340</td>\n","    </tr>\n","    <tr>\n","      <th>860</th>\n","      <td>1649.8524</td>\n","    </tr>\n","    <tr>\n","      <th>7270</th>\n","      <td>965.4100</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6392 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["X_Trn"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"NBXb5Dxno3jC","executionInfo":{"status":"ok","timestamp":1739728483928,"user_tz":-330,"elapsed":1183,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"6020e857-5684-40bd-c872-017eb669308a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Item_Fat_Content  Item_Visibility  Item_Type  Item_MRP  \\\n","4776                 1         0.029565          9  256.4646   \n","7510                 2         0.000000         13  179.7660   \n","5828                 2         0.158716         10  157.2946   \n","5327                 1         0.014628          0   82.3250   \n","4810                 1         0.016645          5  120.9098   \n","...                ...              ...        ...       ...   \n","5734                 2         0.286345          6  139.1838   \n","5191                 1         0.117575          5   75.6670   \n","5390                 1         0.018944          8  237.3590   \n","860                  3         0.054363         13  117.9466   \n","7270                 0         0.016993          9   95.7410   \n","\n","      Outlet_Identifier  Outlet_Establishment_Year  Outlet_Size  \\\n","4776                  3                       2009            1   \n","7510                  3                       2009            1   \n","5828                  9                       1999            1   \n","5327                  6                       2004            2   \n","4810                  7                       2002            3   \n","...                 ...                        ...          ...   \n","5734                  0                       1998            3   \n","5191                  2                       2007            3   \n","5390                  7                       2002            3   \n","860                   2                       2007            3   \n","7270                  8                       1997            2   \n","\n","      Outlet_Location_Type  Outlet_Type  \n","4776                     2            2  \n","7510                     2            2  \n","5828                     0            1  \n","5327                     1            1  \n","4810                     1            1  \n","...                    ...          ...  \n","5734                     2            0  \n","5191                     1            1  \n","5390                     1            1  \n","860                      1            1  \n","7270                     0            1  \n","\n","[6392 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-454de7b2-d89c-4ae4-8108-70303bf58b6d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Item_Fat_Content</th>\n","      <th>Item_Visibility</th>\n","      <th>Item_Type</th>\n","      <th>Item_MRP</th>\n","      <th>Outlet_Identifier</th>\n","      <th>Outlet_Establishment_Year</th>\n","      <th>Outlet_Size</th>\n","      <th>Outlet_Location_Type</th>\n","      <th>Outlet_Type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4776</th>\n","      <td>1</td>\n","      <td>0.029565</td>\n","      <td>9</td>\n","      <td>256.4646</td>\n","      <td>3</td>\n","      <td>2009</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>7510</th>\n","      <td>2</td>\n","      <td>0.000000</td>\n","      <td>13</td>\n","      <td>179.7660</td>\n","      <td>3</td>\n","      <td>2009</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>5828</th>\n","      <td>2</td>\n","      <td>0.158716</td>\n","      <td>10</td>\n","      <td>157.2946</td>\n","      <td>9</td>\n","      <td>1999</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5327</th>\n","      <td>1</td>\n","      <td>0.014628</td>\n","      <td>0</td>\n","      <td>82.3250</td>\n","      <td>6</td>\n","      <td>2004</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4810</th>\n","      <td>1</td>\n","      <td>0.016645</td>\n","      <td>5</td>\n","      <td>120.9098</td>\n","      <td>7</td>\n","      <td>2002</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5734</th>\n","      <td>2</td>\n","      <td>0.286345</td>\n","      <td>6</td>\n","      <td>139.1838</td>\n","      <td>0</td>\n","      <td>1998</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5191</th>\n","      <td>1</td>\n","      <td>0.117575</td>\n","      <td>5</td>\n","      <td>75.6670</td>\n","      <td>2</td>\n","      <td>2007</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5390</th>\n","      <td>1</td>\n","      <td>0.018944</td>\n","      <td>8</td>\n","      <td>237.3590</td>\n","      <td>7</td>\n","      <td>2002</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>860</th>\n","      <td>3</td>\n","      <td>0.054363</td>\n","      <td>13</td>\n","      <td>117.9466</td>\n","      <td>2</td>\n","      <td>2007</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7270</th>\n","      <td>0</td>\n","      <td>0.016993</td>\n","      <td>9</td>\n","      <td>95.7410</td>\n","      <td>8</td>\n","      <td>1997</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6392 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-454de7b2-d89c-4ae4-8108-70303bf58b6d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-454de7b2-d89c-4ae4-8108-70303bf58b6d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-454de7b2-d89c-4ae4-8108-70303bf58b6d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9720c217-54ec-4bf8-b3f3-4ca1116822b2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9720c217-54ec-4bf8-b3f3-4ca1116822b2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9720c217-54ec-4bf8-b3f3-4ca1116822b2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_464b1d13-93ea-463d-b2bb-459f06624bca\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_Trn')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_464b1d13-93ea-463d-b2bb-459f06624bca button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_Trn');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_Trn","summary":"{\n  \"name\": \"X_Trn\",\n  \"rows\": 6392,\n  \"fields\": [\n    {\n      \"column\": \"Item_Fat_Content\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Item_Visibility\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.051130536023273124,\n        \"min\": 0.0,\n        \"max\": 0.328390948,\n        \"num_unique_values\": 5927,\n        \"samples\": [\n          0.119361718,\n          0.011258035,\n          0.032754431\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Item_Type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 0,\n        \"max\": 15,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          9,\n          13,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Item_MRP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62.629275668719735,\n        \"min\": 31.29,\n        \"max\": 266.8884,\n        \"num_unique_values\": 4861,\n        \"samples\": [\n          133.7942,\n          181.7976,\n          244.6144\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outlet_Identifier\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 9,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          2,\n          9,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outlet_Establishment_Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1985,\n        \"max\": 2009,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          2007,\n          1999,\n          1997\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outlet_Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outlet_Location_Type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outlet_Type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["#The fit() method takes the training data as arguments, which can be one array in the case of unsupervised learning,\n","#or two arrays in the case of supervised learning"],"metadata":{"id":"pMHR13JypiK2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rf = RandomForestRegressor()\n","rf.fit(X_Trn,y_Trn)\n","predict = rf.predict(X_Tst)"],"metadata":{"id":"52ZaBlxRnn5Y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["predict"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y6pZxSluoyVo","executionInfo":{"status":"ok","timestamp":1739728498412,"user_tz":-330,"elapsed":2016,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"557cf5c4-7144-425d-fe35-1f94adcc16dc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 628.295486,  750.496418,  716.294272, ..., 4183.407824,\n","       2039.17895 , 2322.483508])"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["mae = metrics.mean_absolute_error(y_Tst,predict)\n","print (mae)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0_YhzkbsnuSk","executionInfo":{"status":"ok","timestamp":1739728501228,"user_tz":-330,"elapsed":360,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"6f8895d0-24eb-4085-f1db-5546f8f089e5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["762.8826943801032\n"]}]},{"cell_type":"code","source":["mse = metrics.mean_squared_error(y_Tst,predict)\n","print (mse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jpTv1Dm_s93d","executionInfo":{"status":"ok","timestamp":1739728504009,"user_tz":-330,"elapsed":368,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"319a3e42-5c5e-4477-e9bf-f316f1c3f05f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1215952.1355512463\n"]}]},{"cell_type":"code","source":["rmse = np.sqrt(metrics.mean_squared_error(y_Tst,predict))\n","print (rmse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r8DN9OJetDzQ","executionInfo":{"status":"ok","timestamp":1739728506400,"user_tz":-330,"elapsed":415,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"e17f1669-95f7-4416-c7b7-e4b4445cf762"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1102.7021971281486\n"]}]},{"cell_type":"code","source":["y_log = np.log1p(train_data_regression['Item_Outlet_Sales'])\n","y_log"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"d5ijKjjntLsJ","executionInfo":{"status":"ok","timestamp":1739728508659,"user_tz":-330,"elapsed":422,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"69abe975-6dc8-4808-b6cb-e198fea9f1f4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       8.225808\n","1       6.096776\n","2       7.648868\n","3       6.597664\n","4       6.903451\n","          ...   \n","8518    7.929984\n","8519    6.310436\n","8520    7.085159\n","8521    7.521100\n","8522    6.642056\n","Name: Item_Outlet_Sales, Length: 8523, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Item_Outlet_Sales</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8.225808</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6.096776</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7.648868</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6.597664</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6.903451</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8518</th>\n","      <td>7.929984</td>\n","    </tr>\n","    <tr>\n","      <th>8519</th>\n","      <td>6.310436</td>\n","    </tr>\n","    <tr>\n","      <th>8520</th>\n","      <td>7.085159</td>\n","    </tr>\n","    <tr>\n","      <th>8521</th>\n","      <td>7.521100</td>\n","    </tr>\n","    <tr>\n","      <th>8522</th>\n","      <td>6.642056</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8523 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["X_log = train_data_regression.drop('Item_Outlet_Sales',axis=1)\n","X_log"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"kImd-syctXhg","executionInfo":{"status":"ok","timestamp":1739728513664,"user_tz":-330,"elapsed":355,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"e834ec04-dd15-42dd-8618-3de60d73ff89"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Item_Fat_Content  Item_Visibility  Item_Type  Item_MRP  \\\n","0                    1         0.016047          4  249.8092   \n","1                    2         0.019278         14   48.2692   \n","2                    1         0.016760         10  141.6180   \n","3                    2         0.000000          6  182.0950   \n","4                    1         0.000000          9   53.8614   \n","...                ...              ...        ...       ...   \n","8518                 1         0.056783         13  214.5218   \n","8519                 2         0.046982          0  108.1570   \n","8520                 1         0.035186          8   85.1224   \n","8521                 2         0.145221         13  103.1332   \n","8522                 1         0.044878         14   75.4670   \n","\n","      Outlet_Identifier  Outlet_Establishment_Year  Outlet_Size  \\\n","0                     9                       1999            1   \n","1                     3                       2009            1   \n","2                     9                       1999            1   \n","3                     0                       1998            3   \n","4                     1                       1987            0   \n","...                 ...                        ...          ...   \n","8518                  1                       1987            0   \n","8519                  7                       2002            3   \n","8520                  6                       2004            2   \n","8521                  3                       2009            1   \n","8522                  8                       1997            2   \n","\n","      Outlet_Location_Type  Outlet_Type  \n","0                        0            1  \n","1                        2            2  \n","2                        0            1  \n","3                        2            0  \n","4                        2            1  \n","...                    ...          ...  \n","8518                     2            1  \n","8519                     1            1  \n","8520                     1            1  \n","8521                     2            2  \n","8522                     0            1  \n","\n","[8523 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-dd6b6388-7e32-4f87-bc96-b13fa7f75c18\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Item_Fat_Content</th>\n","      <th>Item_Visibility</th>\n","      <th>Item_Type</th>\n","      <th>Item_MRP</th>\n","      <th>Outlet_Identifier</th>\n","      <th>Outlet_Establishment_Year</th>\n","      <th>Outlet_Size</th>\n","      <th>Outlet_Location_Type</th>\n","      <th>Outlet_Type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.016047</td>\n","      <td>4</td>\n","      <td>249.8092</td>\n","      <td>9</td>\n","      <td>1999</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0.019278</td>\n","      <td>14</td>\n","      <td>48.2692</td>\n","      <td>3</td>\n","      <td>2009</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0.016760</td>\n","      <td>10</td>\n","      <td>141.6180</td>\n","      <td>9</td>\n","      <td>1999</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>0.000000</td>\n","      <td>6</td>\n","      <td>182.0950</td>\n","      <td>0</td>\n","      <td>1998</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0.000000</td>\n","      <td>9</td>\n","      <td>53.8614</td>\n","      <td>1</td>\n","      <td>1987</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8518</th>\n","      <td>1</td>\n","      <td>0.056783</td>\n","      <td>13</td>\n","      <td>214.5218</td>\n","      <td>1</td>\n","      <td>1987</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8519</th>\n","      <td>2</td>\n","      <td>0.046982</td>\n","      <td>0</td>\n","      <td>108.1570</td>\n","      <td>7</td>\n","      <td>2002</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8520</th>\n","      <td>1</td>\n","      <td>0.035186</td>\n","      <td>8</td>\n","      <td>85.1224</td>\n","      <td>6</td>\n","      <td>2004</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8521</th>\n","      <td>2</td>\n","      <td>0.145221</td>\n","      <td>13</td>\n","      <td>103.1332</td>\n","      <td>3</td>\n","      <td>2009</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>8522</th>\n","      <td>1</td>\n","      <td>0.044878</td>\n","      <td>14</td>\n","      <td>75.4670</td>\n","      <td>8</td>\n","      <td>1997</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8523 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd6b6388-7e32-4f87-bc96-b13fa7f75c18')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dd6b6388-7e32-4f87-bc96-b13fa7f75c18 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dd6b6388-7e32-4f87-bc96-b13fa7f75c18');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-02a0bbc6-c731-481a-8f10-d9fe20f2f308\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-02a0bbc6-c731-481a-8f10-d9fe20f2f308')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-02a0bbc6-c731-481a-8f10-d9fe20f2f308 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a50c22f7-6101-47e2-b95d-9baa45c57332\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_log')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a50c22f7-6101-47e2-b95d-9baa45c57332 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_log');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_log","summary":"{\n  \"name\": \"X_log\",\n  \"rows\": 8523,\n  \"fields\": [\n    {\n      \"column\": \"Item_Fat_Content\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Item_Visibility\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.051597822321135196,\n        \"min\": 0.0,\n        \"max\": 0.328390948,\n        \"num_unique_values\": 7880,\n        \"samples\": [\n          0.224837308,\n          0.046088273,\n          0.0204702\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Item_Type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 0,\n        \"max\": 15,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          4,\n          14,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Item_MRP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62.27506651219039,\n        \"min\": 31.29,\n        \"max\": 266.8884,\n        \"num_unique_values\": 5938,\n        \"samples\": [\n          255.9672,\n          93.512,\n          208.3954\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outlet_Identifier\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 9,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          6,\n          3,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outlet_Establishment_Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1985,\n        \"max\": 2009,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          1997,\n          2009,\n          2002\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outlet_Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outlet_Location_Type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outlet_Type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["X_Train,X_Test,y_Train,y_Test = train_test_split(X_log,y_log,test_size=0.25,random_state=42)\n","print (X_Train.shape)\n","print (y_Train.shape)\n","print (X_Test.shape)\n","print (y_Test.shape)\n","\n","rf = RandomForestRegressor()\n","rf.fit(X_Train,y_Train)\n","predict_log = rf.predict(X_Test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S1MFEd761LnW","executionInfo":{"status":"ok","timestamp":1739728520326,"user_tz":-330,"elapsed":3796,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"fbee0cda-b547-43c1-8855-12b23559b483"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(6392, 9)\n","(6392,)\n","(2131, 9)\n","(2131,)\n"]}]},{"cell_type":"code","source":["rmsle = np.sqrt(metrics.mean_squared_error(y_Test,predict_log))\n","print (rmsle)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vFVB3U6L1aw8","executionInfo":{"status":"ok","timestamp":1739728522283,"user_tz":-330,"elapsed":412,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"654a0197-dcd7-4407-b543-2af4816a67dd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.5480124560600237\n"]}]},{"cell_type":"code","source":["mape = metrics.mean_absolute_percentage_error(y_Tst,predict)\n","print (mape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OaI3KnNM1ned","executionInfo":{"status":"ok","timestamp":1739728525059,"user_tz":-330,"elapsed":435,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"72c47240-502e-4b33-dd6c-21c850c68cc5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.5819205756130859\n"]}]},{"cell_type":"code","source":["r_squared = metrics.r2_score(y_Tst,predict)\n","print (r_squared)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZP-SXzpi1sTv","executionInfo":{"status":"ok","timestamp":1739728528424,"user_tz":-330,"elapsed":422,"user":{"displayName":"Yadav Vishal Rajendra Prasad Auto","userId":"12981485063844914173"}},"outputId":"73d3a07f-e094-46cf-88b3-b691323f68f5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.5592743220739196\n"]}]}]}